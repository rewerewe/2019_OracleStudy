------------------------------------------------ 학생의 학생ID로 성적(총점 및 등수) 확인 프로시저 생성 
-- 성적 입력 프로시저 생성 
-- 학생ID 입력시 학생이 수강한 과목의 성적을 출력하는 프로시저 생성 : 
SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE PRC_STUDENT_SCORE
(
    V_STUDENT_ID        IN TBL_STUDENTS.STUDENT_ID%TYPE
)
IS  
    --EXCEPTION을 활용하기 위한 변수 선언
    USER_DEFINE_ERROR   EXCEPTION;       
    
    --쿼리문에 필요한 변수 선언 : CURSOR에서 꺼낸 데이터 담기 
    V_STUDENT_NAME      TBL_STUDENTS.STUDENT_NAME%TYPE;
    V_COURSE_NAME       TBL_COURSE.COURSE_NAME%TYPE;
    V_SUB_NAME          TBL_STATIC_SUBJECT.SUB_NAME%TYPE;
    V_SUB_START         TBL_SUBJECT.SUB_START%TYPE;
    V_SUB_END           TBL_SUBJECT.SUB_END%TYPE;
    V_BOOK_NAME         TBL_BOOK.BOOK_NAME%TYPE;
    V_SCORE_AT          TBL_SCORE.SCORE_AT%TYPE;
    V_SCORE_WR          TBL_SCORE.SCORE_WR%TYPE;
    V_SCORE_PR          TBL_SCORE.SCORE_PR%TYPE;
    V_TOT               NUMBER(3);    
    V_RANK              NUMBER;
    
    V_STUDENT_ID_C      TBL_STUDENTS.STUDENT_ID%TYPE;
    
    -- 커서 변수 선언 
    CURSOR CUR_STUDENT_SCORE 
    IS
    SELECT T2.STUDENT_NAME               AS "학생이름"            -- AS 이하는 요구분석서에서 출력되어야 하는 컬럼이름을 구분한 것. (삭제 가능)
         , T4.COURSE_NAME                AS "과정이름"
         , T6.SUB_NAME                   AS "과목이름"
         , T5.SUB_START                  AS "과목기간(시작연월일)"
         , T5.SUB_END                    AS "과목기간(종료연월일)"
         , T7.BOOK_NAME                  AS "교재이름"
         , (T8.SCORE_AT * T9.BAEJUM_AT)   AS "출결"                --*** TBL_BAEJUM 의 컬럼명 이름 확인 (현재 BAEJUM_AT 으로 생성, 테스트 되었음)
         , (T8.SCORE_WR * T9.BAEJUM_WR)   AS "필기"
         , (T8.SCORE_PR * T9.BAEJUM_PR)   AS "실기"
         , ((T8.SCORE_AT * T9.BAEJUM_AT) + (T8.SCORE_WR * T9.BAEJUM_WR) + (T8.SCORE_PR * T9.BAEJUM_PR)) AS "총점"
         , RANK() OVER(ORDER BY (T8.SCORE_AT + T8.SCORE_WR + T8.SCORE_PR) DESC) AS "등수"
    FROM TBL_SCORE T8 JOIN TBL_SUGANG T1         ON T8.SUGANG_CODE = T1.SUGANG_CODE
                     JOIN TBL_STUDENTS T2       ON T1.STUDENT_CODE = T2.STUDENT_CODE
                     JOIN TBL_SUBJECT T5        ON T8.SUB_CODE = T5.SUB_CODE 
                     JOIN TBL_OPENCOURSE T3     ON T5.OPEN_C_CODE = T3.OPEN_C_CODE 
                     JOIN TBL_COURSE T4         ON T3.COU_NAME_CODE = T4.COU_NAME_CODE
                     JOIN TBL_STATIC_SUBJECT T6 ON T5.SUB_NAME_CODE = T6.SUB_NAME_CODE
                     JOIN TBL_BOOK T7           ON T5.BOOK_CODE = T7.BOOK_CODE
                     JOIN TBL_BAEJUM T9           ON T5.SUB_CODE = T9.SUB_CODE
    WHERE STUDENT_ID = V_STUDENT_ID; 
      
BEGIN
    -- V_TEACHER_C를 가져오는 쿼리문
    SELECT COUNT(STUDENT_ID) INTO V_STUDENT_ID_C
    FROM TBL_STUDENTS
    WHERE STUDENT_ID = V_STUDENT_ID;
    
    -- 프로시저 호출시 매개변수로 V_STUDENT_ID 입력했을때 존재하지 않는 정보를 입력시 예외발생..
    IF(V_STUDENT_ID_C = 0)
        THEN RAISE USER_DEFINE_ERROR;
    END IF;

    -- 커서 오픈 
    OPEN CUR_STUDENT_SCORE;
    
    -- 커서 오픈 시 쏟아져나오는 데이터들 처리(잡아내기)
    LOOP
        -- 한행 한행 끄집어내어 가져오는 행위 → 『FETCH』        
        FETCH CUR_STUDENT_SCORE INTO V_STUDENT_NAME, V_COURSE_NAME, V_SUB_NAME, V_SUB_START, V_SUB_END, V_BOOK_NAME, V_SCORE_AT, V_SCORE_WR, V_SCORE_PR, V_TOT, V_RANK;      
        EXIT WHEN CUR_STUDENT_SCORE%NOTFOUND;
        
        -- 출력
        DBMS_OUTPUT.PUT_LINE('학생이름 : ' || V_STUDENT_NAME || ', 과정명 : ' ||  V_COURSE_NAME || ', 과목명 : ' || V_SUB_NAME || ', 과목교육기간(시작연월일) : ' || V_SUB_START ||
        ', 과목교육기간(종료월일) : ' || V_SUB_END || ', 교재명 : ' || V_BOOK_NAME || ' [ 출결 : ' || V_SCORE_AT || ' / 필기 : ' || V_SCORE_WR || ' / 실기 : ' || V_SCORE_PR || ' / 총점 : ' || V_TOT || ' ] , 등수 : ' || V_RANK);
            
    END LOOP;
    
    -- 커서 클로즈
    CLOSE CUR_STUDENT_SCORE;
    
    COMMIT;  
    
    -- 예외 메시지 출력 
    EXCEPTION
        WHEN USER_DEFINE_ERROR
            THEN RAISE_APPLICATION_ERROR(-20002,'입력한 학생의 정보가 존재하지않습니다.');
                ROLLBACK;
        WHEN OTHERS
            THEN ROLLBACK;
END;

--○ 프로시저 실행 → 학생이 본인의 학생ID를 입력하면 성적을 보여주는 프로시저 생성
EXEC PRC_STUDENT_SCORE('STU1013');
