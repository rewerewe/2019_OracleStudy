■■■ PreparedStatement ■■■

1. Statement 의 execute 메소드는 
   문자열로 구성된 SQL 구문을 DBMS로 전달하는 역할을 수행하며, 
   내부적으로 SQL 구문을 JDBC 드라이버가 읽을 수 있는 형식으로 
   전처리(precompile) 하게 된다.
  
   이후 드라이버는 DBMS 에 전처리된 요구사항을 전송하게 되는데, 
   SQL 구문을 매번 전처리 과정을 거쳐서 전송하게 되기 때문에 
   반복적인 작업에서 속도가 느려질 수 있는 한계를 갖고 있다.


   이에 반하여, PreparedStatement 는
   전처리된 Statement 로 주어진 SQL 구문의 전처리 과정을 미리 거친 상태로 
   보관해 두기 때문에 반복적인 작업을 수행하는 데 있어 매우 유리하다.
   (시큐어코딩. 보안에 있어서도 PreparedStatement 가 더 유리하다) 

   Statement 의 서브 클래스인 PreparedStatement 는 
   Statement 의 모든 기능을 상속받으며 
   IN 매개변수의 위치에 데이터베이스로 전송되어질 값을 지정하기 위해
   필요한 전체 모든 메소드들의 집합을 포함시킨다.
   또한, 세개의 메소드 『execute(), executeUpdate(), executeQuery()』 sms 
   아무런 파라미터도 가지지 않는다.
   이러한 메소드들의 Statement 형태 (즉, SQL 문 매개변수를 가지는 형태)는
   Prepared Statement 객체에서 사용되지 않는다.


2. IN 매개변수 넘겨주기
   PreparedStatement 객체를 실행하기 전에
   각 『?』 매개변수의 값이 설정되어져 있어야 한다.
   이것은 setXXX() 메소들을 호출하여 이루어지게 되며
   XXX 는 매개변수에 대한 적당한 형(Type) 이다.
   setXXX() 메소드의 첫 번째 인자는 설정된 매개변수의 순번이고,  
   두번째 인자는 매개변수가 설정될 값이다.


※ Connection 의 대표적 메소드

   - createStatement()		할아버지
     : SQL 구문을 Datebase 에 전달하기 위해 Statement 객체를 생성한다.
     
     탄광으로 내려보낼 레일에 바구니를 매다는 작업, 쯤으로 생각해두자.
     매개변수는 별도로 execute() 할 때 넘겨준다. 
  
   - > preparedStatement(String sql)	아버지
     : 파라미터가 포함된 SQL 문을 Datebase 에 전달하기 위해 
       PreparedStatement 객체를 생성한다.

	"구성된 쿼리문  ?   ?    ?    ? "
	
	첫 번째 ? 에다 ___ 담아주세요
	두 번째 ? 에다 ____ 담아주세요 
     	세 번째 ? 에다 ____ 담아주세요 

   - > preparedCall(String sql)		손자
     : 데이터베이스의 Stored Procedure 를 호출하기 위해 
       CallableStatement 객체를 생성한다.

   - clse()
     : 현재의 Connection 객체에 할당된 System Resourse 를 즉시 반환한다.