SELECT USER
FROM DUAL;
--==>> SCOTT

SELECT *
FROM TBL_MEMBER
ORDER BY SID;
/*
3	전훈의	010-1111-1111
4	윤진석	010-2222-2222
5	최보라	010-3333-3333
2	전훈의	010-1111-1111
1	전훈의	010-1111-1111
*/

--○ 데이터 입력 쿼리문 구성
INSERT INTO TBL_MEMBER(SID, NAME, TEL)
VALUES (MEMBERSEQ.NEXTVAL, '이지혜', '010-1212-1212');
--> 한줄구성
INSERT INTO TBL_MEMBER(SID, NAME, TEL) VALUES (MEMBERSEQ.NEXTVAL, '이지혜', '010-1212-1212')
;
-- TBL_MEMBER 데이터 조회
/*
1	전훈의	010-1111-1111
2	전훈의	010-1111-1111
3	전훈의	010-1111-1111
4	윤진석	010-2222-2222
5	최보라	010-3333-3333
6	이지혜	010-1212-1212
7	이지혜	010-1212-1212
*/

-- '이기승' sql문 한번 더 실행
/*
1	전훈의	010-1111-1111
2	전훈의	010-1111-1111
3	전훈의	010-1111-1111
4	윤진석	010-2222-2222
5	최보라	010-3333-3333
6	이지혜	010-1212-1212
7	이지혜	010-1212-1212
8	이기승	010-9090-9090
*/

-- '윤희진' 으로 PreparedStatement 실행
/*
1	전훈의	010-1111-1111
2	전훈의	010-1111-1111
3	전훈의	010-1111-1111
4	윤진석	010-2222-2222
5	최보라	010-3333-3333
6	이지혜	010-1212-1212
7	이지혜	010-1212-1212
8	이기승	010-9090-9090
9	윤희진	010-7777-7777
*/

--○ 데이터 전체 조회 쿼리문 구성
SELECT SID, NAME, TEL
FROM TBL_MEMBER
ORDER BY  SID;
--==>> 한줄구성
SELECT SID, NAME, TEL FROM TBL_MEMBER ORDER BY SID
;
/*
1	전훈의	010-1111-1111
2	전훈의	010-1111-1111
3	전훈의	010-1111-1111
4	윤진석	010-2222-2222
5	최보라	010-3333-3333
6	이지혜	010-1212-1212
7	이지혜	010-1212-1212
8	이기승	010-9090-9090
9	윤희진	010-7777-7777
*/


-----------------------------------------------------------------------------------------------
--JDBC07 & ScoreMain

SELECT SCORESEQ.NEXTVAL
FROM TBL_SCORE
;

DROP SEQUENCE SCORESEQ;

CREATE SEQUENCE SCORESEQ
NOCACHE;


SELECT *
FROM TBL_SCORE
ORDER BY SID;

-- 1. TBL_SCORE 성적 입력 쿼리문 구성
INSERT INTO TBL_SCORE (SID, NAME, KOR, ENG, MAT)
VALUES (SCORESEQ.NEXTVAL, '진윤비', 90, 80, 70);

--> 한줄구성
INSERT INTO TBL_SCORE (SID, NAME, KOR, ENG, MAT) VALUES (SCORESEQ.NEXTVAL, '진윤비', 90, 80, 70);

-- 2. TBL_SCORE 성적 전체 출력 쿼리문 구성
SELECT SID, NAME, KOR, ENG, MAT
      , (KOR+ENG+MAT) AS TOT
      , (KOR+ENG+MAT/3) AS AVG
      , RANK() OVER(ORDER BY (KOR+ENG+MAT) DESC) AS RANK
FROM TBL_SCORE
ORDER BY SID;
-->> 한줄구성 
    SELECT SID, NAME, KOR, ENG, MAT, (KOR+ENG+MAT) AS TOT, (KOR+ENG+MAT/3) AS AVG, RANK() OVER(ORDER BY (KOR+ENG+MAT) DESC) AS RANK FROM TBL_SCORE ORDER BY SID ASC
;

-- 3. TBL_SCORE 이름으로 성적 검색 쿼리문 구성
SELECT SID, NAME, KOR, ENG, MAT
      , (KOR+ENG+MAT) AS TOT
      , (KOR+ENG+MAT/3) AS AVG
      , RANK() OVER(ORDER BY (KOR+ENG+MAT) DESC) AS RANK
FROM TBL_SCORE
WHERE NAME ='정임혜'
ORDER BY SID;
-->> 한줄구성 
SELECT SID, NAME, KOR, ENG, MAT, (KOR+ENG+MAT) AS TOT, (KOR+ENG+MAT/3) AS AVG, RANK() OVER(ORDER BY (KOR+ENG+MAT) DESC) AS RANK FROM TBL_SCORE WHERE NAME ='정임혜' ORDER BY SID
;

-- 3. TBL_SCORE 학번으로 성적 검색 쿼리문 구성
SELECT SID, NAME, KOR, ENG, MAT
      , (KOR+ENG+MAT) AS TOT
      , (KOR+ENG+MAT/3) AS AVG
      , RANK() OVER(ORDER BY (KOR+ENG+MAT) DESC) AS RANK
FROM TBL_SCORE
WHERE SID = 5;
ORDER BY SID;
-->> 한줄구성 
SELECT SID, NAME, KOR, ENG, MAT, (KOR+ENG+MAT) AS TOT, (KOR+ENG+MAT/3) AS AVG, RANK() OVER(ORDER BY (KOR+ENG+MAT) DESC) AS RANK FROM TBL_SCORE WHERE SID = 5 ORDER BY SID
;


-- 5. TBL_SCORE 성적 수정 쿼리문 구성
UPDATE TBL_SCORE
SET KOR = 90, ENG = 90, MAT = 70
WHERE NAME ='정임혜';
--> 한줄구성
UPDATE TBL_SCORE SET KOR = 90, ENG = 90, MAT = 70 WHERE NAME ='정임혜'
;

-- 6. TBL_SCORE 성적 삭제 쿼리문 구성
DELETE
FROM TBL_SCORE
WHERE NAME = '정임혜';
--> 한줄구성
DELETE FROM TBL_SCORE WHERE NAME = '정임혜'
;

